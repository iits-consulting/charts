traefik:
  globalArguments:
    - "--global.checknewversion"
  additionalArguments:
    - "--ping"
  logs:
    general:
      format: json
      level: INFO
    access:
      format: json
      enabled: false
  deployment:
    replicas: 2

  service:
    type: LoadBalancer
    spec:
      externalTrafficPolicy: Cluster

    additionalServices:
      internal:
        type: ClusterIP
        labels:
          traefik-service-label: internal

  providers:
    kubernetesCRD:
      enabled: true
      allowExternalNameServices: true
      allowCrossNamespace: true
    kubernetesIngress:
      enabled: true
      allowExternalNameServices: true
      publishedService:
        enabled: true

  ingressClass:
    enabled: true
    isDefaultClass: true

  ports:
    traefik:
      expose:
        internal: true

    web:
      redirectTo:
        port: websecure

  tlsOptions:
    default:
      sniStrict: true
      minVersion: VersionTLS12

  metrics:
    prometheus:
      serviceMonitor:
        enabled: true
      service:
        enabled: true

defaultCert:
  enabled: true

  # -- (array) Required, set the domains you want to request, i.e.
  #  dnsNames:
  #  - "dev.example.com" # Required if you also want to serve on the "root" url
  #  - "*.dev.example.com" # If you want wildcard certificates, you have to do an DNS01 Request for the certificate
  dnsNames:

  # -- Defaults are 'letsencrypt' for HTTP01 and 'letsencrypt-dns' for DNS01
  # For wildcard-certificates you need to use the DNS01 Challenge
  issuerName: "letsencrypt"

  # Name of the secret, to which cert-manager syncs the certificate
  secretName: "traefik-default-secret"

ingress:
  # Just enable it if you set up forward auth
  enabled: false

  # -- Required, insert where you want to serve the Traefik dashboards from.
  # i.e.:
  # host: "admin.example.com"
  host:

  className: "traefik"

  # Annotations for the Ingress-Resource
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
    traefik.ingress.kubernetes.io/router.tls: "true"

  rules:
    - host: "{{ .Values.ingress.host | required \"You need to set the ingress.host parameter\" }}"
      paths:
        - path: "/api"
          backend:
            name: "{{ include \"traefik.fullname\" $ }}-internal"
            port:
              name: traefik
        - path: "/dashboard"
          backend:
            name: "{{ include \"traefik.fullname\" $ }}-internal"
            port:
              name: traefik

podMonitor:
  enabled: true
  #labels: {}
  #annotations: {}
  port: "metrics"
  interval: "10s"
  path: "/metrics"
