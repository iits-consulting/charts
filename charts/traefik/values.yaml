traefik:
  globalArguments:
    - "--global.checknewversion"
  additionalArguments:
    - "--ping"
  logs:
    general:
      format: json
      level: INFO
    access:
      format: json
      enabled: false
  deployment:
    replicas: 2

  service:
    type: LoadBalancer
    spec:
      externalTrafficPolicy: Cluster
    internal:
      type: ClusterIP

  providers:
    kubernetesCRD:
      enabled: true
      allowExternalNameServices: true
      allowCrossNamespace: true
    kubernetesIngress:
      enabled: true
      allowExternalNameServices: true
      publishedService:
        enabled: true

  ingressClass:
    enabled: true
    isDefaultClass: true

  ports:
    traefik:
      exposeInternal: true
    web:
      redirectTo:
        port: websecure

  tlsOptions:
    default:
      sniStrict: true
      minVersion: VersionTLS12


  metrics:
    prometheus:
      serviceMonitor:
        enabled: true
      service:
        enabled: true

ingress:
  # Just enable it if you set up forward auth
  enabled: false

  # -- Required, insert your primary host address (the one traefik itself is served, e.g. admin.example.com)
  defaultHost:

  # Additional Hosts you want to request Certificates for, these get added into the default certificate
  additionalHosts: []

 # Annotations for the Ingress-Resource
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"


  tls:
    enabled: true
    ## Optional
    #secretName: "traefik-default-cert"

  rules:
    - host: "{{.Values.ingress.defaultHost}}"
      paths:
        - path: "/api"
          backend:
           name: traefik-internal
           port:
              name: traefik
        - path: "/dashboard"
          backend:
            name: traefik-internal
            port:
              name: traefik