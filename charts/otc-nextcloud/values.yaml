ingressRoute:
  domain: "my-domain.com"
  entryPointName: "websecure"
  certificate:
    name: "nextcloud-cert"
    clusterIssuer: letsencrypt

nextcloudStorage:
  s3:
  # -- Required
    S3_BUCKET_NAME: "REPLACE_ME"
    # -- Required
    S3_PUBLIC_KEY: "REPLACE_ME"
    # -- Required
    S3_SECRET_KEY: "REPLACE_ME"
    # -- Required
    S3_BUCKET_URL: "REPLACE_ME"

nextcloud:
  phpClientHttpsFix:
    enabled: true

  internalDatabase:
    enabled: false

  externalDatabase:
    enabled: true
    type: postgresql
    # -- Required, replace it with your host address
    host: "REPLACE_ME"
    # -- Required
    user: "REPLACE_ME"
    # -- Required
    port: "REPLACE_ME"
    # -- Required
    password: "REPLACE_ME"

  nextcloud:
    # -- Required, replace it with your host address
    host:
    extraEnv:
      - name: S3_BUCKET_NAME
        valueFrom:
          secretKeyRef:
            name: "nextcloud-storage-secrets"
            key: S3_BUCKET_NAME
      - name: S3_PUBLIC_KEY
        valueFrom:
          secretKeyRef:
            name: "nextcloud-storage-secrets"
            key: S3_PUBLIC_KEY
      - name: S3_SECRET_KEY
        valueFrom:
          secretKeyRef:
            name: "nextcloud-storage-secrets"
            key: S3_SECRET_KEY
      - name: S3_BUCKET_URL
        valueFrom:
          secretKeyRef:
            name: "nextcloud-storage-secrets"
            key: S3_BUCKET_URL

    configs:
      s3.config.php: |-
        <?php
        $CONFIG = array (
          'objectstore' => array(
            'class' => '\\OC\\Files\\ObjectStore\\S3',
            'arguments' => array(
              'bucket'         => getenv('S3_BUCKET_NAME'),
              'autocreate'     => true,
              'key'            => getenv('S3_PUBLIC_KEY'),
              'secret'         => getenv('S3_SECRET_KEY'),
              'hostname'       => getenv('S3_BUCKET_URL'),
              'use_ssl'        => true,
              'use_path_style' => true,
            )
          )
        );

