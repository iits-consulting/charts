ingress:
  enabled: true
  # -- Required, replace it with your host address
  host:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
  # Creates default Ingress with tls and the given host from .Values.ingress.host
  defaultIngress:
    enabled: true
    ## Default values can be overriden
    #tls:
    #  secretName: "argocd-config.fullname"
    path: "/argocd"
    #pathType: "Prefix"
    backend:
      name: "argocd-server"
#      port:
#        name: http #tpl supported

  ## If you don't want to use the default Ingress, you can define it here on your own
  #tls:
  #  - hosts:
  #      - "{{.Values.ingress.host}}"
  #    secretName: "argocd-config-cert"
  #hosts:
  #  - host: "{{.Values.ingress.host}}"
  #    paths:
  #      - path: "/"
  #        backend:
  #         name: "{{include "argocd-config.fullname" $}}"
  #         port:
  #            name: "{{include "argocd-config.fullname" $}}"
configs:
  rbac:
    enabled: false
    config:
      # See https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/rbac.md for additional information.
      "policy.csv": |
        g, ARGOCD-ADMIN, role:admin
        g, SYSTEM-ADMINISTRATOR, role:admin
  config:
    url: "https://{{.Values.ingress.host}}{{.Values.ingress.defaultIngress.path}}"
    resource.customizations: |
      # Ignores .data changes of all secrets with a vaultInjectionChecksum annotation
      argoproj.io/Application:
       ignoreDifferences: |
          jqPathExpressions:
            - '. | select(.metadata.annotations.parametersChecksum) | .spec.source.helm'
            - '. | select(.metadata.annotations.valueFileChecksum) | .spec.source.helm'
      # Ignores caBundle and template changes of the following resources
      admissionregistration.k8s.io/MutatingWebhookConfiguration:
        ignoreDifferences: |
          jqPathExpressions:
            - .metadata.annotations.template
            - '.webhooks'
      apiextensions.k8s.io/CustomResourceDefinition:
        ignoreDifferences: |
          jqPathExpressions:
            - .spec.conversion.webhookClientConfig.caBundle
      admissionregistration.k8s.io/ValidatingWebhookConfiguration:
        ignoreDifferences: |
          jqPathExpressions:
            - .metadata.annotations.template
            - '.webhooks[]?.clientConfig.caBundle'
            - '.webhooks'
      cert-manager.io/Certificate:
        ignoreDifferences: |
          jqPathExpressions:
            - .spec.duration
      networking.k8s.io/Ingress:
        health.lua: |
          hs = {}
          hs.status = "Healthy"
          return hs
  secret:
    # -- Annotations to be added to argocd-secret
    annotations: { }

    # -- Shared secret for authenticating GitHub webhook events
    githubSecret: ""
    # -- Shared secret for authenticating GitLab webhook events
    gitlabSecret: ""
    # -- Shared secret for authenticating BitbucketServer webhook events
    bitbucketServerSecret: ""
    # -- UUID for authenticating Bitbucket webhook events
    bitbucketUUID: ""
    # -- Shared secret for authenticating Gogs webhook events
    gogsSecret: ""

    # -- add additional secrets to be added to argocd-secret
    ## Custom secrets. Useful for injecting SSO secrets into environment variables.
    ## Ref: https://argoproj.github.io/argo-cd/operator-manual/sso/
    ## Note that all values must be non-empty.
    extra:

    # -- Argo TLS Data
    argocdServerTlsConfig:
      { }
      # key:
      # crt: |
      #   -----BEGIN CERTIFICATE-----
      #   <cert data>
    #   -----END CERTIFICATE-----
    #   -----BEGIN CERTIFICATE-----
    #   <ca cert data>
    #   -----END CERTIFICATE-----

    # -- Bcrypt hashed admin password
    ## Argo expects the password in the secret to be bcrypt hashed. You can create this hash with
    ## `htpasswd -nbBC 10 "" $ARGO_PWD | tr -d ':\n' | sed 's/$2y/$2a/'`
    argocdServerAdminPassword: ""
    # -- Admin password modification time. Eg. `"2006-01-02T15:04:05Z"`
    # @default -- `""` (defaults to current time)
    argocdServerAdminPasswordMtime: ""
