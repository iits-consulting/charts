---
## Set default image, imageTag, and imagePullPolicy. mode is used to indicate the
##
image:
  repository: swaggerapi/swagger-ui
  tag: v4.19.0
  pullPolicy: IfNotPresent

imagePullSecrets: []

## Used to provide the location of the openapi.json file.
## external: json file outside of the chart, that should be passed to helm by: '--set source.external=$(cat openapi.json | base64 -w 0 -)'
## internal: json file as a part of the helm chart files
source:
  external: ""
  internal:
    path: "spec/openapi-petstore.json"

## Configure the deployment resource
##
deployment:
  annotations: {}
  replicas: 1
  extraEnv:
  # - name: BASE_URL
  #   value: /swagger
  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL

podAnnotations: {}
podSecurityContext:
    fsGroup: 2000
    runAsGroup: 1000
    runAsNonRoot: true
    runAsUser: 1000
    seccompProfile:
      type: RuntimeDefault
    supplementalGroups:
      - 9001

## Expose the swagger-ui service and
## Provides options for the service so chart users have the full choice
## Set the service type and the port to serve it.
## ref: http://kubernetes.io/docs/user-guide/services/
##
service:
  annotations: {}
  clusterIP: ""
  externalIPs: []
  loadBalancerIP: ""
  loadBalancerSourceRanges: []
  type: NodePort
  port: 8080

## Set the LoadBalancer service type to internal only.
## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
##
# loadBalancerIP:

## Load Balancer sources
## https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
##
# loadBalancerSourceRanges:
# - 10.10.10.0/24

## Configure Ingress based on the documentation here: https://kubernetes.io/docs/concepts/services-networking/ingress/
##
ingress:
  enabled: false
  annotations: {}
  path: /
  hosts: []
  tls: []

## Configure liveness and readiness probes
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
##
#readinessProbe:
#  httpGet:
#    path: /
#    port: http
#  initialDelaySeconds: 60
#  periodSeconds: 15
#  timeoutSeconds: 10

livenessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 60
  periodSeconds: 30
  timeoutSeconds: 10

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi