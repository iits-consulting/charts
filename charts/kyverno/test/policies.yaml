# Source: common-kubernetes-policies/templates/disallow-unsigned-images.yaml
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: disallow-unsigned-images
spec:
  validationFailureAction: enforce
  background: true
  rules:
    - name: "disallow-unsigned-images-rule"
      match:
        any:
          - resources:
              kinds:
                - Pod
      preconditions:
        any:
          - key: |-
              {{ request.object.metadata.labels.policyReplaceImageRegistryPassed || '' }}
            operator: Equals
            value: "true"
      exclude:
        any:
          - resources:
              namespaces:
                - kube-system

      verifyImages:
        - imageReferences:
            - "*"
          attestors:
            - count: 1
              entries:
                - keys:
                    publicKeys: |-
                      -----BEGIN PUBLIC KEY-----
                      MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEXzV8f2YUEmXF176k//uSmgEEZoKb
                      g2b7+PuoKjfaYVw3HTAE2Z4ak5ZNNq5HF8G1cRt3P713MyuIXiNKP6v2Nw==
                      -----END PUBLIC KEY-----
---
# Source: common-kubernetes-policies/templates/disallow-unspecified-docker-registries.yaml
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: disallow-unspecified-docker-registries
spec:
  validationFailureAction: enforce
  background: true
  rules:
    - name: "disallow-unspecified-docker-registries-rule"
      match:
        any:
          - resources:
              kinds:
                - Pod

      validate:
        message: "Unknown image registry."
        pattern:
          spec:
            containers:
              - image: "mysecure-registry/common-signed-docker-images/*"

      exclude:
        any:
          - resources:
              namespaces:
                - kube-system
---
# Source: common-kubernetes-policies/templates/replace-image-registry.yaml
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: replace-image-registry
  annotations:
    policies.kyverno.io/title: Replace Image Registry
    pod-policies.kyverno.io/autogen-controllers: none
    policies.kyverno.io/category: Sample
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Pod
    kyverno.io/kyverno-version: 1.7.2
    policies.kyverno.io/minversion: 1.6.0
    kyverno.io/kubernetes-version: "1.23"
    policies.kyverno.io/description: >-
      We rewrite every third party docker registry to `mysecure-registry/common-signed-docker-images/`.
      If the image does not exist there it can not be deployed.

      Since we have also business apps you can also exclude registries from the replacement.

      The pulls are directed to a approved registry. In some cases, those registries may function as
      pull-through proxies and can fetch the image if not cached.
      This policy mutates all images either in the form 'image:tag' or
      'registry.corp.com/image:tag' to be `mysecure-registry/common-signed-docker-images/image:tag`.
      Note that this mutates Pods directly and not their controllers. It can be changed if desired but
      if so may need to not match on Pods.
spec:
  background: true
  validationFailureAction: enforce
  rules:
    - name: replace-image-registry
      preconditions:
        all:
          - key: "{{request.object.spec.containers[0].image || ''}}"
            operator: NotEquals
            value: "docker.io/something/*"
          - key: "{{request.object.spec.containers[1].image || ''}}"
            operator: NotEquals
            value: "docker.io/something/*"
          - key: "{{request.object.spec.containers[2].image || ''}}"
            operator: NotEquals
            value: "docker.io/something/*"
      match:
        any:
          - resources:
              kinds:
                - Pod
      mutate:
        foreach:
          - list: "request.object.spec.containers"
            patchStrategicMerge:
              spec:
                containers:
                  - name: "{{ element.name }}"
                    image: "{{ regex_replace_all_literal('.*(.*)/', '{{element.image}}', 'mysecure-registry/common-signed-docker-images/' )}}"
    - name: replace-image-registry-init-containers
      match:
        any:
          - resources:
              kinds:
                - Pod
      preconditions:
        all:
          - key: "{{ request.object.spec.initContainers[] || `[]` | length(@) }}"
            operator: GreaterThanOrEquals
            value: 1
      mutate:
        foreach:
          - list: "request.object.spec.initContainers"
            patchStrategicMerge:
              spec:
                initContainers:
                  - name: "{{ element.name }}"
                    image: "{{ regex_replace_all_literal('.*(.*)/', '{{element.image}}', 'mysecure-registry/common-signed-docker-images/' )}}"
          - patchStrategicMerge:
              metadata:
                labels:
                  policyReplaceImageRegistryPassed: "true"