{{- with .Values.autoInjectDockerPullSecrets }}
{{- if .enabled }}
{{- range $registryName,$registryValues := .secrets }}
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: add-image-pull-secret-{{$registryName}}
  annotations:
    policies.kyverno.io/title: Add imagePullSecrets
    policies.kyverno.io/category: DockerImage
    policies.kyverno.io/severity: high
    policies.kyverno.io/subject: Pod
    policies.kyverno.io/minversion: 1.7.2
    pod-policies.kyverno.io/autogen-controllers: {{ $.Values.autoInjectDockerPullSecrets.autogenControllers }}
    policies.kyverno.io/description: >-
      Images coming from certain registries require authentication in order to pull them,
      and the kubelet uses this information in the form of an imagePullSecret to pull
      those images on behalf of your Pod. This policy searches for images coming from a
      registry called `{{ $registryValues.registryWildcard }}` and, if found, will mutate the Pod to add an
      imagePullSecret called `{{ $registryName }}`.
spec:
  rules:
    - name: add-image-pull-secret-{{$registryName}}
      match:
        any:
          - resources:
              kinds:
                - Pod
      mutate:
        mutateExistingOnPolicyUpdate: false
        patchStrategicMerge:
          metadata:
            annotations:
              clusterpolicies.kyverno.io/add-image-pull-secret: Added ImageSecret for {{ $registryName }}
          spec:
            containers:
              - <(image): "{{ $registryValues.registryWildcard }}"
            imagePullSecrets:
              - name: pull-secret-{{ $registryName }}
---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: auto-create-docker-pull-secret-{{ $registryName }}
spec:
  rules:
    - name: auto-create-docker-pull-secret-{{ $registryName }}
      match:
        any:
          - resources:
              kinds:
                - Namespace
      generate:
        generateExisting: true
        synchronize: true
        apiVersion: v1
        kind: Secret
        name: pull-secret-{{ $registryName }}
        # generate the resource in the new namespace
        namespace: '{{"{{request.object.metadata.name}}"}}'
        data:
          kind: Secret
          type: kubernetes.io/dockerconfigjson
          data:
            .dockerconfigjson: {{ printf "{\"auths\": {\"%s\": {\"auth\": \"%s\"}}}" $registryValues.registryUrl (printf "%s:%s" $registryValues.username $registryValues.password | b64enc) | b64enc }}
---
{{- end }}
{{- end }}
{{- end }}