{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 28,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 17,
      "panels": [],
      "title": "Summary",
      "type": "row"
    },
    {
      "datasource": {
        "default": true,
        "type": "prometheus",
        "uid": "prometheus"
      },
      "description": "Show details about each active probe within the selected time range.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": true,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red",
                "value": null
              },
              {
                "color": "green",
                "value": 0.9995
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Status (last report)"
            },
            "properties": [
              {
                "id": "custom.cellOptions",
                "value": {
                  "type": "color-text"
                }
              },
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "0": {
                        "color": "red",
                        "index": 1,
                        "text": "DOWN"
                      },
                      "1": {
                        "color": "green",
                        "index": 0,
                        "text": "UP"
                      }
                    },
                    "type": "value"
                  },
                  {
                    "options": {
                      "match": "null+nan",
                      "result": {
                        "color": "yellow",
                        "index": 2,
                        "text": "UNKNOWN"
                      }
                    },
                    "type": "special"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 14,
        "w": 12,
        "x": 0,
        "y": 1
      },
      "id": 16,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 0,
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "11.2.0",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "prometheus"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "probe_success{instance=~\"$instance_selector\"}",
          "format": "table",
          "instant": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Instance Details",
      "transformations": [
        {
          "id": "sortBy",
          "options": {
            "fields": {},
            "sort": [
              {
                "desc": false,
                "field": "Time"
              }
            ]
          }
        },
        {
          "id": "groupBy",
          "options": {
            "fields": {
              "Time": {
                "aggregations": [
                  "last"
                ],
                "operation": "aggregate"
              },
              "Value": {
                "aggregations": [
                  "last"
                ],
                "operation": "aggregate"
              },
              "Value #A": {
                "aggregations": [
                  "last"
                ],
                "operation": "aggregate"
              },
              "Value #B": {
                "aggregations": [
                  "last"
                ],
                "operation": "aggregate"
              },
              "instance": {
                "aggregations": [],
                "operation": "groupby"
              },
              "instance 1": {
                "aggregations": []
              },
              "module": {
                "aggregations": [
                  "last"
                ],
                "operation": "aggregate"
              },
              "target": {
                "aggregations": [
                  "last"
                ],
                "operation": "aggregate"
              }
            }
          }
        },
        {
          "id": "sortBy",
          "options": {
            "fields": {},
            "sort": [
              {
                "field": "instance"
              }
            ]
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "Time (last) 2": true
            },
            "includeByName": {},
            "indexByName": {
              "Time (last)": 1,
              "Value (last)": 4,
              "instance": 0,
              "module (last)": 2,
              "target (last)": 3
            },
            "renameByName": {
              "Time (last)": "Last report",
              "Time (last) 1": "Time (last report)",
              "Value #A (last)": "Status (last report)",
              "Value #B (allValues)": "Uptime (over time range)",
              "Value #B (last)": "Uptime Average (selected range)",
              "Value (last)": "Status (last report)",
              "instance": "Instance",
              "module (last)": "Module",
              "target (last)": "Target"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "default": true,
        "type": "prometheus",
        "uid": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": true,
            "inspect": false
          },
          "decimals": 3,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red",
                "value": null
              },
              {
                "color": "green",
                "value": 0.9995
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Value"
            },
            "properties": [
              {
                "id": "custom.cellOptions",
                "value": {
                  "type": "color-text"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 14,
        "w": 4,
        "x": 12,
        "y": 1
      },
      "id": 5,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "11.2.0",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "prometheus"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "# Calculate availability rate by instance\n# First calculating the sum of values adjusted by baseline\n# Then dividing by the count of samples in the interval\nsum by (instance) (\n  sum_over_time(\n    # Apply baseline correction (if enabled) and cap at 1.0\n    clamp_max(\n      # Start with raw probe success values\n      probe_success{instance=~\"$instance_selector\"} \n      # Subtract baseline adjustment using vector matching\n      - on() group_left() min without (pod) ($baseline_correction_toggle * (probe_success{instance=\"$baseline\"} - 1))\n      # Cap at maximum value of 1.0\n      , 1.0\n    )[$__range:30s] offset -1s\n  )\n)\n/\n# Divide by the count of samples in the time period\nsum by (instance) (\n  count_over_time(\n    clamp_max(\n      probe_success{instance=~\"$instance_selector\"} \n      - on() group_left() min without (pod) ($baseline_correction_toggle * (probe_success{instance=\"$baseline\"} - 1))\n      , 1.0\n    )[$__range:30s] offset -1s\n  )\n)",
          "format": "table",
          "instant": true,
          "legendFormat": "__auto",
          "range": false,
          "refId": "A"
        }
      ],
      "title": "Uptime Average (Auto Range)",
      "transformations": [
        {
          "id": "sortBy",
          "options": {
            "fields": {},
            "sort": [
              {
                "field": "instance"
              }
            ]
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "Time": true
            },
            "includeByName": {},
            "indexByName": {},
            "renameByName": {}
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "default": true,
        "type": "prometheus",
        "uid": "prometheus"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": true,
            "inspect": false
          },
          "decimals": 3,
          "mappings": [],
          "noValue": "-",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red",
                "value": null
              },
              {
                "color": "green",
                "value": 0.9995
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Value"
            },
            "properties": [
              {
                "id": "custom.cellOptions",
                "value": {
                  "type": "color-text"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 14,
        "w": 4,
        "x": 16,
        "y": 1
      },
      "id": 11,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "11.2.0",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "prometheus"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "# Calculate availability rate by instance\n# First calculating the sum of values adjusted by baseline\n# Then dividing by the count of samples in the interval\nsum by (instance) (\n  sum_over_time(\n    # Apply baseline correction (if enabled) and cap at 1.0\n    clamp_max(\n      # Start with raw probe success values\n      probe_success{instance=~\"$instance_selector\"} \n      # Subtract baseline adjustment using vector matching\n      - on() group_left() min without (pod) ($baseline_correction_toggle * (probe_success{instance=\"$baseline\"} - 1))\n      # Cap at maximum value of 1.0\n      , 1.0\n    )[$__range:30s] offset -1s\n  )\n)\n/\n# Divide by the count of samples in the time period\nsum by (instance) (\n  count_over_time(\n    clamp_max(\n      probe_success{instance=~\"$instance_selector\"} \n      - on() group_left() min without (pod) ($baseline_correction_toggle * (probe_success{instance=\"$baseline\"} - 1))\n      , 1.0\n    )[$__range:30s] offset -1s\n  )\n)",
          "format": "table",
          "instant": true,
          "legendFormat": "__auto",
          "range": false,
          "refId": "A"
        }
      ],
      "timeFrom": "now-30d/d",
      "title": "Uptime Average",
      "transformations": [
        {
          "id": "sortBy",
          "options": {
            "fields": {},
            "sort": [
              {
                "field": "instance"
              }
            ]
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "Time": true
            },
            "includeByName": {},
            "indexByName": {},
            "renameByName": {}
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "default": true,
        "type": "prometheus",
        "uid": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": true,
            "inspect": false
          },
          "decimals": 3,
          "mappings": [],
          "noValue": "-",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red",
                "value": null
              },
              {
                "color": "green",
                "value": 0.9995
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Value"
            },
            "properties": [
              {
                "id": "custom.cellOptions",
                "value": {
                  "type": "color-text"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 14,
        "w": 4,
        "x": 20,
        "y": 1
      },
      "id": 15,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "11.2.0",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "prometheus"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "# Calculate availability rate by instance\n# First calculating the sum of values adjusted by baseline\n# Then dividing by the count of samples in the interval\nsum by (instance) (\n  sum_over_time(\n    # Apply baseline correction (if enabled) and cap at 1.0\n    clamp_max(\n      # Start with raw probe success values\n      probe_success{instance=~\"$instance_selector\"} \n      # Subtract baseline adjustment using vector matching\n      - on() group_left() min without (pod) ($baseline_correction_toggle * (probe_success{instance=\"$baseline\"} - 1))\n      # Cap at maximum value of 1.0\n      , 1.0\n    )[$__range:30s] offset -1s\n  )\n)\n/\n# Divide by the count of samples in the time period\nsum by (instance) (\n  count_over_time(\n    clamp_max(\n      probe_success{instance=~\"$instance_selector\"} \n      - on() group_left() min without (pod) ($baseline_correction_toggle * (probe_success{instance=\"$baseline\"} - 1))\n      , 1.0\n    )[$__range:30s] offset -1s\n  )\n)",
          "format": "table",
          "instant": true,
          "legendFormat": "__auto",
          "range": false,
          "refId": "A"
        }
      ],
      "timeFrom": "now-90d/d",
      "title": "Uptime Average",
      "transformations": [
        {
          "id": "sortBy",
          "options": {
            "fields": {},
            "sort": [
              {
                "field": "instance"
              }
            ]
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "Time": true
            },
            "includeByName": {},
            "indexByName": {},
            "renameByName": {}
          }
        }
      ],
      "type": "table"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 15
      },
      "id": 18,
      "panels": [],
      "title": "Timelines",
      "type": "row"
    },
    {
      "datasource": {
        "default": true,
        "type": "prometheus",
        "uid": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "fillOpacity": 70,
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineWidth": 1,
            "spanNulls": false
          },
          "decimals": 3,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red",
                "value": null
              },
              {
                "color": "green",
                "value": 0.9995
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 11,
        "w": 24,
        "x": 0,
        "y": 16
      },
      "id": 10,
      "options": {
        "alignValue": "center",
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "mergeValues": false,
        "rowHeight": 0.9,
        "showValue": "auto",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.2.0",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "prometheus"
          },
          "editorMode": "code",
          "expr": "# Calculate availability rate by instance\n# First calculating the sum of values adjusted by baseline\n# Then dividing by the count of samples in the interval\nsum by (instance) (\n  sum_over_time(\n    # Apply baseline correction (if enabled) and cap at 1.0\n    clamp_max(\n      # Start with raw probe success values\n      probe_success{instance=~\"$instance_selector\"} \n      # Subtract baseline adjustment using vector matching\n      - on() group_left() min without (pod) ($baseline_correction_toggle * (probe_success{instance=\"$baseline\"} - 1))\n      # Cap at maximum value of 1.0\n      , 1.0\n    )[$__interval:30s] offset -1s\n  )\n)\n/\n# Divide by the count of samples in the time period\nsum by (instance) (\n  count_over_time(\n    clamp_max(\n      probe_success{instance=~\"$instance_selector\"} \n      - on() group_left() min without (pod) ($baseline_correction_toggle * (probe_success{instance=\"$baseline\"} - 1))\n      , 1.0\n    )[$__interval:30s] offset -1s\n  )\n)",
          "instant": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Uptime Timeline (Auto Range)",
      "type": "state-timeline"
    },
    {
      "datasource": {
        "default": true,
        "type": "prometheus",
        "uid": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "fillOpacity": 70,
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineWidth": 1,
            "spanNulls": false
          },
          "decimals": 3,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red",
                "value": null
              },
              {
                "color": "green",
                "value": 0.9995
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 11,
        "w": 24,
        "x": 0,
        "y": 27
      },
      "id": 13,
      "interval": "1d",
      "options": {
        "alignValue": "center",
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "mergeValues": false,
        "rowHeight": 0.9,
        "showValue": "auto",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.2.0",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "prometheus"
          },
          "editorMode": "code",
          "expr": "# Calculate availability rate by instance\n# First calculating the sum of values adjusted by baseline\n# Then dividing by the count of samples in the interval\nsum by (instance) (\n  sum_over_time(\n    # Apply baseline correction (if enabled) and cap at 1.0\n    clamp_max(\n      # Start with raw probe success values\n      probe_success{instance=~\"$instance_selector\"} \n      # Subtract baseline adjustment using vector matching\n      - on() group_left() min without (pod) ($baseline_correction_toggle * (probe_success{instance=\"$baseline\"} - 1))\n      # Cap at maximum value of 1.0\n      , 1.0\n    )[$__interval:30s] offset -1d1s\n  )\n)\n/\n# Divide by the count of samples in the time period\nsum by (instance) (\n  count_over_time(\n    clamp_max(\n      probe_success{instance=~\"$instance_selector\"} \n      - on() group_left() min without (pod) ($baseline_correction_toggle * (probe_success{instance=\"$baseline\"} - 1))\n      , 1.0\n    )[$__interval:30s] offset -1d1s\n  )\n)",
          "instant": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        }
      ],
      "timeFrom": "now-30d/d",
      "title": "Uptime Timeline",
      "type": "state-timeline"
    },
    {
      "datasource": {
        "default": true,
        "type": "prometheus",
        "uid": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "fillOpacity": 70,
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineWidth": 1,
            "spanNulls": false
          },
          "decimals": 3,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red"
              },
              {
                "color": "green",
                "value": 0.9995
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 11,
        "w": 24,
        "x": 0,
        "y": 38
      },
      "id": 14,
      "interval": "1d",
      "options": {
        "alignValue": "center",
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "mergeValues": false,
        "rowHeight": 0.9,
        "showValue": "auto",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.2.0",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "prometheus"
          },
          "editorMode": "code",
          "expr": "# Calculate availability rate by instance\n# First calculating the sum of values adjusted by baseline\n# Then dividing by the count of samples in the interval\nsum by (instance) (\n  sum_over_time(\n    # Apply baseline correction (if enabled) and cap at 1.0\n    clamp_max(\n      # Start with raw probe success values\n      probe_success{instance=~\"$instance_selector\"} \n      # Subtract baseline adjustment using vector matching\n      - on() group_left() min without (pod) ($baseline_correction_toggle * (probe_success{instance=\"$baseline\"} - 1))\n      # Cap at maximum value of 1.0\n      , 1.0\n    )[$__interval:30s] offset -1d1s\n  )\n)\n/\n# Divide by the count of samples in the time period\nsum by (instance) (\n  count_over_time(\n    clamp_max(\n      probe_success{instance=~\"$instance_selector\"} \n      - on() group_left() min without (pod) ($baseline_correction_toggle * (probe_success{instance=\"$baseline\"} - 1))\n      , 1.0\n    )[$__interval:30s] offset -1d1s\n  )\n)",
          "instant": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        }
      ],
      "timeFrom": "now-90d",
      "title": "Uptime Timeline",
      "type": "state-timeline"
    }
  ],
  "refresh": "",
  "schemaVersion": 39,
  "tags": [
    "Blackbox",
    "Prometheus",
    "Uptime"
  ],
  "templating": {
    "list": [
      {
        "current": {
          "selected": true,
          "text": [
            "All"
          ],
          "value": [
            "$__all"
          ]
        },
        "datasource": {
          "type": "prometheus",
          "uid": "prometheus"
        },
        "definition": "label_values(probe_success,instance)",
        "description": "Select which instances to display on the dashboard",
        "hide": 0,
        "includeAll": true,
        "label": "Instance",
        "multi": true,
        "name": "instance_selector",
        "options": [],
        "query": {
          "qryType": 1,
          "query": "label_values(probe_success,instance)",
          "refId": "PrometheusVariableQueryEditor-VariableQuery"
        },
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "enabled",
          "value": "1"
        },
        "description": "Enable or disable baseline correction. If enabled, uptime visualizations will correct failing uptime scrape points if the selected baseline is also failing, correcting the metric for probe failures.",
        "hide": 0,
        "includeAll": false,
        "label": "Baseline Correction",
        "multi": false,
        "name": "baseline_correction_toggle",
        "options": [
          {
            "selected": true,
            "text": "enabled",
            "value": "1"
          },
          {
            "selected": false,
            "text": "disabled",
            "value": "0"
          }
        ],
        "query": "enabled : 1, disabled : 0",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "current": {
          "selected": false,
          "text": "baseline",
          "value": "baseline"
        },
        "datasource": {
          "type": "prometheus",
          "uid": "prometheus"
        },
        "definition": "label_values(probe_success,instance)",
        "description": "Select one of the scrape points to be used as the baseline for correcting probe errors on measurement.",
        "hide": 0,
        "includeAll": false,
        "label": "Baseline",
        "multi": false,
        "name": "baseline",
        "options": [],
        "query": {
          "qryType": 1,
          "query": "label_values(probe_success,instance)",
          "refId": "PrometheusVariableQueryEditor-VariableQuery"
        },
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-24h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "browser",
  "title": "Blackbox Uptime Monitor",
  "uid": "aejsqqy9db20wc",
  "version": 115,
  "weekStart": "monday"
}