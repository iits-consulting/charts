{{- with .Values.backup }}
{{- if .enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $.Release.Name }}-backup-config
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
data:
  configure-backup.sh: |
    #!/bin/sh
    set -eu

    endpoint="https://{{ $.Release.Name }}-es-http:9200"

    echo -e "\nINFO: Creating {{ .repoType}} snapshot repository {{ .repoName }}"
    curl -u "$ELASTICSEARCH_USERNAME:$ELASTICSEARCH_PASSWORD" --cacert /es-cert/ca.crt -s -X PUT --header 'Content-Type: application/json' ${endpoint}/_snapshot/{{ .repoName }} --data-binary @- << EOF

      {
        "type": "{{ .repoType }}",
        "settings": {{ .repositorySettings | toJson }}
      }
    EOF

    echo -e "\nINFO: {{ .repoType }} snapshot repository {{ .repoName }} created!"

    echo -e "\nINFO: Creating SLM policy {{ .policy.name }}"
    curl -u "$ELASTICSEARCH_USERNAME:$ELASTICSEARCH_PASSWORD" --cacert /es-cert/ca.crt -s -X PUT --header 'Content-Type: application/json' ${endpoint}/_slm/policy/{{ .policy.name }} --data-binary @- << EOF


      {
        "schedule": "{{ .policy.schedule }}",
        "name": "<{{ .policy.name }}-{now/d}>",
        "repository": "{{ .repoName }}",
        "config": {
          "indices": {{ .policy.indices | toJson }},
          "ignore_unavailable": false,
          "include_global_state": true
        },
        "retention": {
          "expire_after": "{{ .policy.retention.expireAfter }}",
          "min_count": {{ .policy.retention.minCount }},
          "max_count": {{ .policy.retention.maxCount }}
        }
      }
    EOF

    echo -e "\nINFO: SLM policy {{ .policy.name }} created!"
{{- end }}
{{- end }}
