gatekeeper:
  replicaCount: 2

  strategy:
    type: "RollingUpdate"

  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 10m
      memory: 16Mi

  livenessProbe:
    enabled: true

  image:
    tag: 3.0.2

  containerSecurityContext:
    allowPrivilegeEscalation: false
    seccompProfile:
      type: RuntimeDefault

  config:

    # -- Required: client id used to authenticate to the oauth service
    client-id:

    # -- Required: client secret used to authenticate to the oauth service
    client-secret:

    # -- Required: discovery url to retrieve the openid configuration, i.e. "https://keycloak.example.com/realms/<realm>"
    discovery-url:

    # -- Required: encryption key used to encryption the session state
    encryption-key:

    # important: do not proxy requests to upstream, useful for forward-auth usage (with nginx, traefik)
    no-proxy: true

    # important: do not have back redirects when no authentication is present, 401 them
    no-redirects: false

    # adds the authorization header to the proxy request
    enable-authorization-header: false

    # indicates we should redirect to the identity provider for logging out. By default: /oauth/logout
    enable-logout-redirect: true

    # enables the handling of the refresh tokens
    enable-refresh-tokens: true

    # enables the token authentication header X-Auth-Token to upstream
    enable-token-header: false

    # enable gzip compression for response
    enable-compression: true

    # enables a default denial on all requests, requests with valid token are permitted, you have to explicitly say what is permitted
    enable-default-deny: false

    # switch on json logging rather than text
    enable-json-logging: true

    # indicates we should add a request id if none found
    enable-request-id: true

    # enable http logging of the requests
    enable-logging: false

    #enable the prometheus metrics collector on /oauth/metrics
    enable-metrics: false

    # defines the binding interface for main listener, e.g. {address}:{port}. This is required and there is no default value
    listen: 0.0.0.0:3000

    # defines the interface to bind admin-only endpoint (live-status, debug, prometheusâ€¦). If not defined, this defaults to the main listener defined by Listen
    listen-admin: :4000

    # preserve the host header of the proxied request in the upstream request
    preserve-host: true

    # the server read timeout on the http server
    server-read-timeout: 10s

    # the server write timeout on the http server
    server-write-timeout: 10s

    # list of resources
    resources:
      - require-any-role: true
        uri: /*

# possible fields: https://doc.traefik.io/traefik/middlewares/http/forwardauth/
middleware:
  address: "http://{{ include \"oidc-forward-auth.fullname\" $ }}-gatekeeper.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.gatekeeper.service.proxy.port }}"
  authRequestHeaders:
    - "Accept"
    - "Authorization"
    - "Cookie"

  authResponseHeaders:
    - "Authorization"
    - "Set-Cookie"

  addAuthCookiesToResponse:
    - "kc-access"
    - "kc-state"

ingress:
  enabled: true

  # -- Optional, set the ingressClassName on the Ingress. If not defined the default IngressClass from the cluster is used.
  #className: "traefik"

  # -- Required, replace it with your host address
  host:

  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
    traefik.ingress.kubernetes.io/router.tls: "true"

  hosts:
    - host: "{{ .Values.ingress.host }}"
      paths:
        - path: "/oauth"
